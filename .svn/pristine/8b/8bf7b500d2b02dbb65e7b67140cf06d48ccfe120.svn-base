package edu.wm.cs.cs301.slidingpuzzle;

import java.util.Arrays;
import java.util.Set;

import edu.wm.cs.cs301.slidingpuzzle.PuzzleState.Operation;

public class AStarSolver implements PuzzleSolver {
	
	private int[] initialState;
	private int[] finalState;
	private int counter;
	private PuzzleState curState;

	@Override
	public boolean configure(int[] initial, int[] goal) {
		initialState = initial;
		finalState = goal;
		counter = 0;
		return initial.length == goal.length; 
	}
	
	private boolean CheckMember(Set<int[]> set, int[] state) {
		for (int[] item: set) {
			if (Arrays.equals(state, item)) {
				return true;
			}
		}
		return false;
	}

	@Override
	public Operation[] movesToSolve() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public PuzzleState getSolverInitialState() {
		// TODO Auto-generated method stub
		PuzzleState InitialState = new SimplePuzzleState();
		InitialState.setState(initialState);
		return InitialState;
	}

	@Override
	public PuzzleState getSolverFinalState() {
		// TODO Auto-generated method stub
		PuzzleState FinalState = new SimplePuzzleState();
		FinalState.setState(finalState);
		return FinalState;
	}

	@Override
	public int getNumberOfStatesExplored() {
		// TODO Auto-generated method stub
		return counter;
	}

	@Override
	public int getMaxSizeOfQueue() {
		// TODO Auto-generated method stub
		return 10000;
	}

}
